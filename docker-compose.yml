version: "3.8"

services:
  php:
    build:
      context: back
      target: symfony_php
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
    healthcheck:
      interval: 10s
      timeout: 3s
      retries: 3
      start_period: 30s
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@database:5432/${POSTGRES_DB}?serverVersion=${POSTGRES_VERSION:-13}&charset=utf8
    depends_on:
      - database
    links:
      - database

  caddy_back:
    build:
      context: back
      target: symfony_caddy
    depends_on:
      - php
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
    restart: unless-stopped
    volumes:
      - php_socket:/var/run/php
      - caddy_data:/data
      - caddy_config:/config
    ports:
      # HTTP
      - target: 80
        published: 55999
        protocol: tcp
      # HTTPS
      - target: 443
        published: 55995
        protocol: tcp
      # HTTP/3
      - target: 443
        published: 55995
        protocol: udp

  database:
    image: postgres:${POSTGRES_VERSION:-13}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
  
  vite:
    build:
      context: front
      target: vite_node
    restart: unless-stopped
    depends_on:
      - caddy_back
        
  caddy_front:
    build:
      context: front
      target: vite_caddy
    depends_on:
      - vite
    environment:
      SERVER_NAME: ${SERVER_NAME:-localhost, caddy:80}
    restart: unless-stopped
    volumes:
      - caddy_data_front:/data
      - caddy_config_front:/config
    ports:
      # HTTP
      - target: 80
        published: 80
        protocol: tcp
      # HTTPS
      - target: 443
        published: 443
        protocol: tcp
      # HTTP/3
      - target: 443
        published: 443
        protocol: udp

volumes:
  php_socket:
  caddy_data:
  caddy_data_front:
  caddy_config:
  caddy_config_front:
